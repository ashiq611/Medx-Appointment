version: "3.8"

volumes:
  grafana-data:
  prometheus-data:


networks:
  medx-dev:


services:
  medx-backend-container:
    build:
      context: ./backend
      dockerfile: Dockerfile

    ports:
      - "3006:3006"

    volumes:
      - ./backend:/app #bind mount
      - /app/node_modules #anonymous volume

    env_file:
      - ./backend/.env
    networks:
      - medx-dev


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - medx-dev
    restart: always

  loki:
    image: grafana/loki:2.9.10
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml     
      - ./loki/loki-data:/etc/loki/loki-data                  
    ports:
      - "3130:3130"
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    networks:
      - medx-dev

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_PASSWORD=medx # Set a password for the admin user
      - GF_AUTH_DISABLE_LOGIN_FORM=false
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
      - GF_SERVER_HTTP_PORT=3020
    networks:
      - medx-dev
    restart: always
    ports:
      - "3020:3020"


  medx-frontend-container:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000" 
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - medx-backend-container
    networks:
      - medx-dev